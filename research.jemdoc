# jemdoc: menu{MENU.txt}{research.html}

= Research

== Cloud Computing and Content Delivery Infrastructure

~~~
{}{raw}
<div style="float:right; margin:0px 0px 15px 15px;"><iframe width="560" height="315" src="https://www.youtube.com/embed/UrjC3l_xUNo" frameborder="0" allowfullscreen></iframe></div>
~~~

My research involves identifying fundamental resource bottlenecks in cloud computing and content delivery infrastructure, and designing algorithms which optimally use these constrained resources. The goal is that, eventually, cloud resource consumption practices would become less wasteful than as they are today. 


A key challenge in these systems is to understand the impact of dynamic 
interactions of diverse jobs on user performance as the systemâ€™s size and load scale. A better understanding here allows us to design better algorithms which scale well under stochastic loads. This is a chicken and egg problem. Algorithms impact system dynamics, which we study in order to design new algorithms, and so on, until everything falls into place. 

 
Here is a talk in which I show that significant gains can be achieved in centralized content delivery systems via a combination of pooling of server resources and fairness based load balancing. The talk was given at [https://www.lincs.fr/ LINCS] lab in Paris. 

== Active learning in Online Matching Markets
Recently, I have been developing online recommendation algorithms for job-worker matching platforms and Q&A platforms. A key feature of these applications is making decision under uncertainty in job types and worker skills. These need to be learned over time, in parallel with matching decisions. 


Further, these applications involve recommending tasks to human experts. Works in crowd sourcing has appreciated that if humans are involved then efficient utilization of the expert resources is important, and several works are devoted to this. In most crowdsourcing works the final goal is to optimize error in labeling tasks. However, in matching platforms the goal is to optimize the overall rewards obtained from matching, eg, maximizing the rate of successful hires in job-worker matching platforms. Intuitively, explorations helps in learning the job types and expert skills, but they also consume a part of expert resources. We design active learning algorithms which optimally balances this tradeoff to achieve maximum rewards. 







