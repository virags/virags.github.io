# jemdoc: menu{MENU.txt}{research.html}

= Research

== Cloud Computing 

~~~
{}{raw}
<div style="float:right; margin:0px 0px 15px 15px;"><iframe width="560" height="315" src="https://www.youtube.com/embed/UrjC3l_xUNo" frameborder="0" allowfullscreen></iframe></div>
~~~

My main research focus is to identify fundamental resource bottlenecks in cloud computing and content delivery infrastructure, and to design algorithms which optimally use these constrained resources. The goal is that, eventually, cloud resource consumption practices would become less wasteful than as they are today. 


A key challenge in these systems is to understand the impact of dynamic 
interactions of diverse jobs on user performance as the system’s size and load scale. A better understanding here allows us to design better algorithms which scale well under stochastic loads. This is a chicken and egg problem. Algorithms impact system dynamics, which we study in order to design new algorithms, and so on, until everything falls into place. 

 
Here is a talk in which I show that significant gains can be achieved in centralized content delivery systems via a combination of pooling of server resources and fairness based load balancing. The talk was given at [https://www.lincs.fr/ LINCS] lab in Paris. 

== New paradigms for Machine Learning 
Recently, I have also been exploring alternate paradigms for machine learning, with particular focus on applications which interact dynamically with human consumers, eg., online Q&A platforms, crowdsourcing, hiring platforms, etc. The aim is to design an agile framework which efficiently learns (and `unlearns’) the evolving patterns. 

Classical machine learning algorithms for such applications estimate parameters such as interests, demands, capabilities, etc.\ of human consumers from the data collected in the past. Such algorithms are often `frozen in time’ in that they view the parameters as being static while making decisions. 

Instead, we use queues to track histories of different users. We let the gradients obtained via queue lengths drive the decision making. Since queues are inherently dynamic, such an approach could be more suitable for above applications. 

== Applied Queueing Theory
The field of queueing theory began in 1909 with the [https://web.archive.org/web/20111001212934/http://oldwww.com.dtu.dk/teletraffic/erlangbook/pps131-137.pdf work of A. K. Erlang] motivated by telephone systems. Since then, the questions raised by engineering applications such as telecom networks, control, operations, etc have provided significant impetus to queueing theory and in turn to the theory of applied probability. 

Similarly, based on my experience in the field of cloud computing and machine learning, I believe that they too have a lot to offer to offer to queue theory and vice versa. We have exciting times ahead of us. 





